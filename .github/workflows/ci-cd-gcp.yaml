name: CI-CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/supermarket-api

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: pytest -q

      - name: Upload test results
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: pytest-logs
          path: .

  build-push-image:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: ${{ needs.build-and-test.result == 'success' }}
    outputs:
      tag: ${{ steps.vars.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set image tag
        id: vars
        run: |
          SHA_TAG=${GITHUB_SHA::7}
          echo "tag=${SHA_TAG}" >> "$GITHUB_OUTPUT"

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.tag }}

  deploy-to-k8s:
    needs: build-push-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER_NAME }}
          location: ${{ secrets.GCP_REGION }}

      - name: Apply namespace and RBAC
        run: |
          kubectl apply -f k8s/setup/namespace.yaml
          kubectl apply -f k8s/setup/quota.yaml
          kubectl apply -f k8s/setup/role.yaml
          kubectl apply -f k8s/setup/role_binding.yaml

      - name: Deploy app
        run: |
          NAMESPACE=$(kubectl get -f k8s/setup/namespace.yaml -o jsonpath='{.metadata.name}')
          IMAGE=${{ env.IMAGE_NAME }}:${{ needs.build-push-image.outputs.tag }}

          # Substitute image and apply deployment in the correct namespace
          sed "s|DOCKER_IMAGE_PLACEHOLDER|$IMAGE|" k8s/base/deployment.yaml | kubectl apply -f - -n $NAMESPACE

          # Apply service in the same namespace
          kubectl apply -f k8s/base/service.yaml -n $NAMESPACE

      - name: Print pod name(s)
        run: |
          NAMESPACE=$(kubectl get -f k8s/setup/namespace.yaml -o jsonpath='{.metadata.name}')
          echo "Pods running in namespace $NAMESPACE:"
          kubectl get pods -n $NAMESPACE -o custom-columns=NAME:.metadata.name --no-headers

      - name: Print service external IP
        run: |
          NAMESPACE=$(kubectl get -f k8s/setup/namespace.yaml -o jsonpath='{.metadata.name}')
          echo "Service external IP:"
          kubectl get svc -n $NAMESPACE -o jsonpath='{.items[0].status.loadBalancer.ingress[0].ip}'