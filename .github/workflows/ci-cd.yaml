name: CI-CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/supermarket-api

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: pytest -q

      - name: Upload test results (if you later add junitxml)
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: pytest-logs
          path: .

  build-push-image:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: ${{ needs.build-and-test.result == 'success' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set image tag
        id: vars
        run: |
          SHA_TAG=${GITHUB_SHA::7}
          echo "tag=${SHA_TAG}" >> "$GITHUB_OUTPUT"

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.tag }}

  deploy-doks:
    needs: build-push-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_API_TOKEN }}

      - name: Get kubeconfig for DOKS cluster
        run: doctl kubernetes cluster kubeconfig save ${{ secrets.KUBE_CLUSTER_NAME }} --expiry-seconds 600

      - name: Substitute Docker Hub username in manifests
        run: |
          sed -i "s|DOCKER_HUB_USERNAME|${{ secrets.DOCKERHUB_USERNAME }}|g" k8s/deployment.yaml

      - name: Deploy app manifests
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          # kubectl apply -f k8s/ingress.yaml # if using ingress

      - name: Wait for rollout
        run: |
          kubectl rollout status deployment/supermarket-api --timeout=120s

      - name: Install Helm
        uses: azure/setup-helm@v4

      - name: Install/upgrade kube-prometheus-stack (Grafana + Prometheus)
        run: |
          kubectl create namespace monitoring --dry-run=client -o yaml | kubectl apply -f -
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo update
          # Install or upgrade the stack with minimal values
          helm upgrade --install kube-prometheus-stack prometheus-community/kube-prometheus-stack \
            --namespace monitoring \
            --set grafana.service.type=LoadBalancer \
            --set grafana.adminPassword=${{ secrets.GRAFANA_ADMIN_PASSWORD }}

      - name: Register ServiceMonitor for our app
        run: |
          kubectl apply -f k8s/monitoring/servicemonitor.yaml